version: "3.3"

services:
  spark-app:
    depends_on:
      - minio-s3
    build: 
      dockerfile: ./dockerfile-spark
      context: .
    hostname: spark-app
    container_name: spark-app
    image: spark-app:0.0.1
    ports:
      - "9004:4040"
    deploy:
      resources:
        limits:
          cpus: "0.95"
          memory: 4G
    restart: always
    networks:
      network-data-lake:
        ipv4_address: 10.0.0.2
  jupyter-notebook:
    depends_on:
      - minio-s3
    build: 
      dockerfile: ./dockerfile-jupyter
      context: .
    hostname: jupyter-notebook
    container_name: jupyter-notebook
    image: renatoelho/servidor-jupyter:0.0.2
    ports:
      - "9000:9000"
      - "9001:9001"
    deploy:
      resources:
        limits:
          cpus: "0.95"
          memory: 2G
    restart: always
    volumes: 
      - ./app:/home/jupyter/python/jupyter/app:rw
    networks:
      network-data-lake:
        ipv4_address: 10.0.0.3
  minio-s3:
    hostname: minio-s3
    container_name: minio-s3
    image: bitnami/minio:2023
    ports: 
      - "9002:9000"
      - "9003:9001"
    environment: 
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=eO3RNPcKgWInlzPJuI08
      - TZ=America/Sao_Paulo
    deploy:
      resources:
        limits:
          cpus: "0.95"
          memory: 2G
    restart: always
    volumes: 
      - minio_data:/bitnami/minio/data
      - minio_certs:/certs
    networks:
      network-data-lake:
        ipv4_address: 10.0.0.4
    
volumes:
  minio_data:
  minio_certs:

networks:
  network-data-lake:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.0.0.0/16